sap.ui.define(["sap/ui/test/Opa5","./Common","sap/ui/test/matchers/PropertyStrictEquals","sap/ui/test/matchers/I18NText","sap/ui/test/actions/Press","sap/ui/test/actions/EnterText"],function(e,t,r,n,s,o){"use strict";e.createPageObjects({onCheckout:{baseClass:t,viewName:"Checkout",actions:{iPressOnTheReturnToShopButton:function(){return this.waitFor({id:"returnToShopButton",actions:new s})},iPressOnTheNextStepButton:function(){return this.waitFor({id:"shoppingCartWizard",actions:function(e){e.nextStep()},errorMessage:"Could not proceed to Next Step"})},iPressOnDifferentAddressCheckbox:function(){return this.waitFor({id:"differentDeliveryAddress",actions:new s,errorMessage:"Could not press Different Delivery Address Checkbox"})},iPressOnTheButtonInTheFooter:function(){return this.waitFor({id:"showPopoverButton",actions:new s,errorMessage:"The button is not rendered and could not be pressed"})},iEnterCreditCardInformation:function(e,t,r,n){return this.waitFor({id:"creditCardHolderName",actions:new o({text:e}),success:function(){this.waitFor({id:"creditCardNumber",actions:new o({text:t}),success:function(){this.waitFor({id:"creditCardSecurityNumber",actions:new o({text:r}),success:function(){this.waitFor({id:"creditCardExpirationDate",actions:new o({text:n}),errorMessage:"Could not enter Text on Input with id creditCardExpirationDate"})},errorMessage:"Could not enter Text on Input with id creditCardSecurityNumber"})},errorMessage:"Could not enter Text on Input with id creditCardNumber"})},errorMessage:"Could not enter Text on Input with id creditCardHolderName"})},iEnterWrongCreditCardInformation:function(){this.iEnterCreditCardInformation("My name","1234567891234567","13","01/2020")},iEnterCorrectCreditCardInformation:function(){this.iEnterCreditCardInformation("My name","1234567891234567","123","01/2020")},iEnterCashOnDeliveryText:function(e,t,r,n){return this.waitFor({id:"cashOnDeliveryName",actions:new o({text:e}),success:function(){this.waitFor({id:"cashOnDeliveryLastName",actions:new o({text:t}),success:function(){this.waitFor({id:"cashOnDeliveryPhoneNumber",actions:new o({text:r}),success:function(){this.waitFor({id:"cashOnDeliveryEmail",actions:new o({text:n}),errorMessage:"Could not enter Text on Input with id 'cashOnDeliveryEmail'"})},errorMessage:"Could not enter Text on Input with id 'cashOnDeliveryPhoneNumber'"})},errorMessage:"Could not enter Text on Input with id 'cashOnDeliveryLastName'"})},errorMessage:"Could not enter Text 'cashOnDeliveryName'"})},iEnterCorrectCashOnDeliveryInfo:function(){this.iEnterCashOnDeliveryText("FirstName","LastName","+4911111111","inf@shop.com")},iEnterInvoiceAddressText:function(e,t,r,n){return this.waitFor({id:"invoiceAddressAddress",actions:new o({text:e}),success:function(){this.waitFor({id:"invoiceAddressCity",actions:new o({text:t}),success:function(){this.waitFor({id:"invoiceAddressZip",actions:new o({text:r}),success:function(){this.waitFor({id:"invoiceAddressCountry",actions:new o({text:n}),errorMessage:"Could not enter Text on Input with id invoiceAddressCountry"})},errorMessage:"Could not enter Text on Input with id invoiceAddressZip"})},errorMessage:"Could not enter Text on Input with id invoiceAddressCity"})},errorMessage:"Could not enter Text invoiceAddressAddress"})},iEnterDeliveryAddressText:function(){return this.waitFor({id:"deliveryAddressAddress",actions:new o({text:"MyStreet.2"}),success:function(){this.waitFor({id:"deliveryAddressCity",actions:new o({text:"MyCity"}),success:function(){this.waitFor({id:"deliveryAddressZip",actions:new o({text:"1234"}),success:function(){this.waitFor({id:"deliveryAddressCountry",actions:new o({text:"MyCountry"}),errorMessage:"Could not enter Text on Input with id DeliveryAddressCountry"})},errorMessage:"Could not enter Text on Input with id DeliveryAddressZip"})},errorMessage:"Could not enter Text on Input with id DeliveryAddressCity"})},errorMessage:"Could not enter Text DeliveryAddressAddress"})},iEnterInvoiceAddress:function(){this.iEnterInvoiceAddressText("MyStreet.2","MyCity","1234","DE")},iPressOnTheSubmitButton:function(){return this.waitFor({id:"submitOrder",actions:new s,errorMessage:"Could not submit order"})},iPressOnTheYesButton:function(){this.waitFor({searchOpenDialogs:true,controlType:"sap.m.Button",matchers:function(e){return this.I18NTextExtended(e,"MSGBOX_YES","text","sap.m")}.bind(this),success:function(e){return e.filter(function(){return true})},actions:new s,errorMessage:"Did not find the Yes button"});return this},iPressOnTheEditButtonBacktoList:function(){return this.waitFor({id:"backtoList",actions:new s,errorMessage:"The BacktoList button could not be pressed"})},iPressOnTheEditButtonBackToPaymentType:function(){return this.waitFor({id:"backToInvoiceAddress",actions:new s,errorMessage:"The BackToInvoiceAddress button could not be pressed"})},iPressOnTheEditButtonBackToInvoiceAddress:function(){return this.waitFor({id:"backToPaymentType",actions:new s,errorMessage:"The BackToPaymentType button could not be pressed"})},iPressOnTheEditButtonBackToDeliveryType:function(){return this.waitFor({id:"backToDeliveryType",actions:new s,errorMessage:"The BackToDeliveryType button could not be pressed"})},iPressOnTheBankTransferButton:function(){return this.waitFor({controlType:"sap.m.Button",matchers:new n({propertyName:"text",key:"checkoutPaymentBankTransfer"}),actions:new s,errorMessage:"Cannot select Bank Transfer from Payment Methods"})},iPressOnTheCashOnDeliveryButton:function(){return this.waitFor({controlType:"sap.m.Button",matchers:new n({propertyName:"text",key:"checkoutPaymentCod"}),actions:new s,errorMessage:"Cannot select Cash On Delivery from Payment Methods"})},iPressOnTheExpressDeliveryButton:function(){return this.waitFor({controlType:"sap.m.Button",matchers:new n({propertyName:"text",key:"checkoutDeliveryTypeExpress"}),actions:new s,errorMessage:"Cannot select express delivery"})},iPressTheCloseButton:function(){return this.waitFor({controlType:"sap.m.Button",viewName:"",matchers:new r({name:"icon",value:"sap-icon://decline"}),actions:new s,errorMessage:"The message popover close button was not found"})}},assertions:{iShouldSeeTheWizardStepContentsStep:function(){return this.waitFor({id:"contentsStep",success:function(t){e.assert.ok(t,"Found the WizardStep 'contentsStep'")}})},iShouldSeeTheWizardStepPaymentTypeStep:function(){return this.waitFor({id:"paymentTypeStep",success:function(t){e.assert.ok(t,"Found the WizardStep 'PaymentTypeStep'")}})},iShouldSeeTheStep3Button:function(){return this.waitFor({controlType:"sap.m.Button",matchers:new r({name:"text",value:"Step 3"}),success:function(t){e.assert.ok(t[0].getProperty("visible"),"Found the Step3 Button enabled")}})},iShouldSeeTheStep4Button:function(){return this.waitFor({controlType:"sap.m.Button",matchers:new r({name:"text",value:"Step 4"}),success:function(){e.assert.ok(true,"Found the Step4 Button enabled")}})},iShouldSeeTheStep5Button:function(){return this.waitFor({controlType:"sap.m.Button",matchers:new r({name:"text",value:"Step 5"}),success:function(t){e.assert.ok(t[0].getProperty("visible"),"Found the Step5 Button enabled")}})},iShouldSeeTheStep6Button:function(){return this.waitFor({controlType:"sap.m.Button",matchers:new r({name:"text",value:"Step 6"}),success:function(t){e.assert.ok(t[0].getProperty("visible"),"Found the Step6 Button enabled")},errorMessage:"Step6 buttom was not found"})},iShouldGetErrorMessageTextDoesNotMatchTypeForEmailField:function(e){return this.waitFor({id:"cashOnDeliveryEmail",matchers:function(t){return this.I18NTextExtended(t,"checkoutCodEmailValueTypeMismatch","valueStateText",null,[e])}.bind(this),errorMessage:"The Email field error message text does not match to the type of error (value has wrong format)."})},iShouldNotSeeTheStep4Button:function(t){return this.waitFor({id:t,success:function(r){e.assert.strictEqual(r.getValidated(),false,"The"+t+" button was not found")},errorMessage:"The"+t+" button was found"})},iShouldSeeTheDeliveryAddressStep:function(){return this.waitFor({id:"deliveryAddressStep",success:function(t){e.assert.ok(t,"Found the WizardStep 'DeliveryStep'")}})},iShouldSeeTheDeliveryStepButton:function(){return this.waitFor({id:"deliveryAddressStep",success:function(t){e.assert.ok(t.getValidated(),"The delivery step button was found")},errorMessage:"The delivery step button was not found"})},iShouldSeeTheDeliveryTypeStep:function(){return this.waitFor({id:"deliveryTypeStep",success:function(t){e.assert.ok(t,"Found the WizardStep 'DeliveryTypeStep'")}})},iShouldSeeTheOrderSummary:function(){return this.waitFor({id:"summaryPage",success:function(t){e.assert.ok(t,"Found the order summary page")}})},iShouldSeeExpressDelivery:function(){return this.waitFor({id:"selectedDeliveryMethod",success:function(){e.assert.ok("Express Delivery","Found the Express Delivery Method")}})},iShouldSeeTheFooterWithTheErrorButton:function(){return this.waitFor({id:"wizardFooterBar",success:function(t){e.assert.ok(t.getAggregation("contentLeft")[0].getProperty("text")==="1","Found the Footer containing the error button")},errorMessage:"Footer is not visible"})},iShouldSeeTheMessagePopover:function(){return this.waitFor({id:"messagePopover",success:function(){e.assert.ok("errorMessagePopover","The MessagePopover is visible")},errorMessage:"The MessagePopover was not displayed"})}}}})});